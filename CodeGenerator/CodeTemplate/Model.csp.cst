<%@ CodeTemplate Language="C#"  TargetLanguage="C#" Inherits="MyCodeTemplate.BaseTemplate.BaseCSharpTableTemplate"  Description="Generates SELECT/INSERT/UPDATE/DELETE stored procedure based on a database table schema." ResponseEncoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="MyCodeTemplate" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<?xml version="1.0"?>
<codeSmith xmlns="http://www.codesmithtools.com/schema/csp.xsd">
  <propertySets>	
<% 
	string strReaderCommandNames = string.Format("P_{0}_GetById",GetClassName(SourceTable.Name,"2"));
    string strMultiRowReaderCommandNames = string.Format("P_{0}_GetAll",GetClassName(SourceTable.Name,"2"));
	string strScalarCommandNames = "\"\"";
	string strNoQueryCommandNames = string.Format("P_{0}_Delete,P_{0}_UpdateStatus",GetClassName(SourceTable.Name,"2"));
    string strFlushCacheCommandNames="\"\"";
    string strSingleRowReaderPassCacheCommandNames="\"\"";
    string strMultiRowReaderPassCacheCommandNames = "\"\"";
%>
    <propertySet output="SqlScript\<%=GetClassName(SourceTable.Name)%>.sql" template="..\..\CodeTemplate\SqlServerProcedure.cst" >
      <property name="ClassNameRule">1</property>
      <property name="IsAutoRun">True</property>
      <property name="TablePrefix">""</property>
      <property name="ProcedureTag">P_</property>
      <property name="IncludeDrop">True</property>
      <property name="IncludeInsert">True</property>
      <property name="IncludeUpdate">True</property>
      <property name="IncludeUpdateStatus">True</property>
      <property name="IncludeUpdateStatusBatch">True</property>
      <property name="IncludeDelete">True</property>
      <property name="IncludeGet">True</property>
      <property name="IncludeGetList">True</property>
      <property name="IsolationLevel">ReadCommitted</property>
      <property name="InsertPrefix">Insert</property>
      <property name="UpdatePrefix">Update</property>
      <property name="UpdateStatusPrefix">_UpdateStatus</property>
      <property name="UpdateStatusBatchPrefix">_UpdateStatusBatch</property>
      <property name="DeletePrefix">Delete</property>
      <property name="SelectPrefix">Get</property>
      <property name="SelectAllSuffix">List</property>
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
    </propertySet> 

    <propertySet output="..\..\..\Dal\NBall\Auto\<%=GetClassName(SourceTable.Name)%>ProviderAuto.cs" template="..\..\CodeTemplate\SqlServerProvider.cs.cst">
	  <property name="ClassNameRule"><%=ClassNameRule%></property>
	  <property name="Namespace"><%=Namespace.Trim()%></property>
	  <property name="TablePrefix"><%=TablePrefix.Trim()==string.Empty?"\"\"":TablePrefix.Trim()%></property>	
	  <property name="SingleRowReaderCommandNames"><%=strReaderCommandNames%></property>
	  <property name="MultiRowReaderCommandNames"><%=strMultiRowReaderCommandNames%></property>
      <property name="ScalarCommandNames"><%=strScalarCommandNames%></property>
      <property name="NoQueryCommandNames"><%=strNoQueryCommandNames%></property>
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
    </propertySet>
    <propertySet output="..\..\..\Bll\NBall\Auto\<%=GetClassName(SourceTable.Name)%>MgrAuto.cs" template="..\..\CodeTemplate\Managers.cs.cst">
	  <property name="ClassNameRule"><%=ClassNameRule%></property>
	  <property name="Namespace"><%=Namespace.Trim()%></property>
	  <property name="TablePrefix"><%=TablePrefix.Trim()==string.Empty?"\"\"":TablePrefix.Trim()%></property>	
	  <property name="SingleRowReaderCommandNames"><%=strReaderCommandNames%></property>
	  <property name="MultiRowReaderCommandNames"><%=strMultiRowReaderCommandNames%></property>
      <property name="ScalarCommandNames"><%=strScalarCommandNames%></property>
      <property name="NoQueryCommandNames"><%=strNoQueryCommandNames%></property>
      <property name="FlushCacheCommandNames"><%=strFlushCacheCommandNames%></property>
      <property name="SingleRowReaderPassCacheCommandNames"><%=strSingleRowReaderPassCacheCommandNames%></property>
      <property name="MultiRowReaderPassCacheCommandNames"><%=strMultiRowReaderPassCacheCommandNames%></property>
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
    </propertySet>
    <propertySet output="..\..\..\Dal\NBall\Partial\<%=GetClassName(SourceTable.Name)%>Provider.cs" template="..\..\CodeTemplate\SqlServerProviderInit.cs.cst">
	  <property name="ClassNameRule"><%=ClassNameRule%></property>
	  <property name="Namespace"><%=Namespace.Trim()%></property>
	  <property name="TablePrefix"><%=TablePrefix.Trim()==string.Empty?"\"\"":TablePrefix.Trim()%></property>	
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
      <property name="CanOverwriteOld">False</property>
    </propertySet>
    <propertySet output="..\..\..\Bll\NBall\Partial\<%=GetClassName(SourceTable.Name)%>Mgr.cs" template="..\..\CodeTemplate\ManagersInit.cs.cst">
	  <property name="ClassNameRule"><%=ClassNameRule%></property>
	  <property name="Namespace"><%=Namespace.Trim()%></property>
	  <property name="TablePrefix"><%=TablePrefix.Trim()==string.Empty?"\"\"":TablePrefix.Trim()%></property>	
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
      <property name="CanOverwriteOld">False</property>
    </propertySet>
    <propertySet output="..\..\..\Entity\NBall\Auto\<%=GetClassName(SourceTable.Name)%>EntityAuto.cs" template="..\..\CodeTemplate\Entity.cs.cst">
	  <property name="ClassNameRule"><%=ClassNameRule%></property>
	  <property name="Namespace"><%=Namespace.Trim()%></property>
	  <property name="TablePrefix"><%=TablePrefix.Trim()==string.Empty?"\"\"":TablePrefix.Trim()%></property>	
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
    </propertySet>
    <propertySet output="..\..\..\Entity\NBall\Partial\<%=GetClassName(SourceTable.Name)%>Entity.cs" template="..\..\CodeTemplate\EntityInit.cs.cst">
	  <property name="ClassNameRule"><%=ClassNameRule%></property>
	  <property name="Namespace"><%=Namespace.Trim()%></property>
	  <property name="TablePrefix"><%=TablePrefix.Trim()==string.Empty?"\"\"":TablePrefix.Trim()%></property>	
      <property name="SourceTable">
        <connectionString><%=SourceTable.Database.ConnectionString%></connectionString>
        <providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
        <table>
          <owner>dbo</owner>
          <name><%=SourceTable.Name%></name>
        </table>
      </property>
      <property name="CanOverwriteOld">False</property>
    </propertySet>
    
    
  </propertySets>
</codeSmith>

<script runat="template">

</script>